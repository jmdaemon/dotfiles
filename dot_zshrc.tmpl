export DOTFILES="$HOME/.config/dotfiles"
export ZDOTDIR=$DOTFILES/zsh

#
# Shell Theme & Prompt
#
source $DOTFILES/scripts/terminal/base16.sh
source $DOTFILES/scripts/terminal/prompt/zprompt.zsh

# Shell Completions
fpath=( $fpath "$DOTFILES/completion" )
zstyle ':completion:*' completer _complete
zstyle ':completion:*' matcher-list '' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' '+l:|=* r:|=*'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path $XDG_CACHE_HOME/zsh/zcompcache

#
# History
#
HISTDIR=$HOME/.history/"{{- .system}}"/zsh
HISTFILE="$HISTDIR"/zsh_history
HISTSIZE=10000
SAVEHIST=10000

# Share history between all sessions.
setopt SHARE_HISTORY 

# Record timestamp of command
setopt EXTENDED_HISTORY

# Ignore duplicate history entries
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS

#
# Coredumps
#
# https://github.com/ohmyzsh/ohmyzsh/issues/7332#issuecomment-593308026
skip_global_compinit=1
ZSH_CACHE_DIR=$HOME/.cache/zsh
ZSH_COMPDUMP="${ZSH_CACHE_DIR}/zsh/zcompdump-${HOST/.*/}-${ZSH_VERSION}"

# Set crash dump directory to ~/.cache/zsh
autoload -Uz compinit && compinit -d $XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION

# Use ZSH hooks
autoload -Uz add-zsh-hook

#
# Hooks
#

{{ if ( eq .system "arch-laptop" "arch-asus") -}}
# https://wiki.archlinux.org/title/Zsh#On-demand_rehash
zshcache_time="$(date +%s%N)"

# Automatically rehash $PATH
rehash_precmd() {
  if [[ -a /var/cache/zsh/pacman ]]; then
    local paccache_time="$(date -r /var/cache/zsh/pacman +%s%N)"
    if (( zshcache_time < paccache_time )); then
      rehash
      zshcache_time="$paccache_time"
    fi
  fi
}

add-zsh-hook -Uz precmd rehash_precmd
{{- end }}

# Archive history when it gets too big.
archive_history() {
    emulate -L zsh
    # Make HISTDIR if it doesn't already exist
    if [[ ! -d "$HISTDIR" ]]; then
        mkdir -p "$HISTDIR"
    fi
    # If we are not about to exceed 10,000 lines
    if [[ $(wc -l $HISTFILE) < 10000 ]]; then
        # Write to history
        print -sr -- "${1%%$'\n'}"
    fi
    if [[ $(wc -l $HISTFILE) > 9999 ]]; then
        echo "Archiving shell history"
        # Get datetimestamp in YYYY-MM-DD HH:MM:SS
        current_date=$(date -u +'%Y-%m-%d %H:%M:%S')
        # Archive old history file
        mv $HISTFILE "$HISTDIR/${current_date}-zsh_history"
        touch $HISTFILE
        print -sr -- "${1%%$'\n'}"
    fi
}

add-zsh-hook -Uz zshaddhistory archive_history

#
# Plugins
#

# Oh-My-Zsh
export OMZ="$HOME/.config/zsh/oh-my-zsh"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"
# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=1

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.  COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $OMZ/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
if [ -z "$OMZ/custom/plugins/zsh-completions" ]; then
  git clone https://github.com/zsh-users/zsh-completions "$OMZ/custom/plugins/zsh-completions"
fi

plugins=( git gradle-completion colored-man-pages zsh-completions )

# Automatically upgrades OMZ
# https://stackoverflow.com/questions/11378607/oh-my-zsh-disable-would-you-like-to-check-for-updates-prompt
export DISABLE_UPDATE_PROMPT=true
# Added in quick hack
source $OMZ/oh-my-zsh.sh
# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"
#

source $DOTFILES/scripts/terminal/sdkman.sh
source $HOME/.profile

# Persistent Tmux Sessions
#if [ $(tty) == /dev/tty1 ]; then
#  /usr/bin/tmux new -s 0
#  /usr/bin/tmux attach -t 0
#fi 
{{- if ( eq .system "linux-desktop") }}
if [ -e "$HOME.nix-profile/etc/profile.d/nix.sh" ]; then
    . "$HOME.nix-profile/etc/profile.d/nix.sh";
fi
{{- end }}
# vim:ft=zsh
