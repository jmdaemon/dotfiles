# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.
# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="/$HOME/bin:$PATH"
fi

# https://wiki.archlinux.org/index.php/XDG_Base_Directory 
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"

# History 
HISTORY_DIR="$HOME/.history"
export GDBHISTFILE=$HISTORY_DIR/gdb/"{{ .system }}"/gdb_history
export PYTHONHISTFILE=$HISTORY_DIR/python/"{{ .system }}"/python_history
export OCTAVE_HISTFILE=$HISTORY_DIR/octave/"{{ .system }}"/octave_history
export LESSHISTFILE="$HISTORY_DIR/less/{{ .system }}"/less_history
export NODE_REPL_HISTORY="$HISTORY_DIR"/nodejs/"{{ .system }}"/node_repl_history
export SQLITE_HISTORY="$HISTORY_DIR"/sqlite3/"{{ .system }}"/sqlite_history
export REDISCLI_HISTFILE="$HISTORY_DIR"/redis/rediscli_history

# RC Files
export OCTAVE_SITE_INITFILE="$XDG_CONFIG_HOME/octave/octaverc"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
export CONDARC="$XDG_CONFIG_HOME/conda/condarc"
export WGETRC="$XDG_CONFIG_HOME/wget/wgetrc"

# Xorg
export USERXSESSION="$XDG_CACHE_HOME/x11/xsession"
export USERXSESSIONRC="$XDG_CACHE_HOME/x11/xsessionrc"
export ALTUSERXSESSION="$XDG_CACHE_HOME/x11/Xsession"
export ERRFILE="$XDG_CACHE_HOME/x11/xsession-errors"

# Languages
export CARGO_HOME="$XDG_DATA_HOME"/cargo 
export GOPATH="$XDG_DATA_HOME"/go 
export GEM_HOME="$XDG_DATA_HOME"/gem
export GEM_SPEC_CACHE="$XDG_CACHE_HOME"/gem   
export RUSTUP_HOME="$XDG_DATA_HOME"/rustup 
export RUSTC_WRAPPER="sccache" # Cache bin
export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
export JULIA_DEPOT_PATH="$XDG_DATA_HOME/julia:$JULIA_DEPOT_PATH"

export NVM_DIR="$XDG_DATA_HOME"/nvm 
export NPM_DIR="$XDG_DATA_HOME"/npm
export NPM_CONFIG_CACHE=$XDG_CACHE_HOME/npm
export NODE_PATH="$NODE_PATH:$NPM_DIR/lib/node_modules"
export YARN_DIR="$XDG_DATA_HOME"/yarn
export YARN_RC_FILENAME="$YARN_DIR"/yarnrc.yml
export GHCUP_USE_XDG_DIRS="$XDG_DATA_HOME"/ghcup
export STACK_ROOT="$XDG_DATA_HOME"/stack
export CABAL_CONFIG="$XDG_CONFIG_HOME"/cabal/config
export CABAL_DIR="$XDG_CACHE_HOME"/cabal
export ROSWELL_HOME="$XDG_DATA_HOME"/roswell
export HEX_HOME="$XDG_DATA_HOME"/hex
export MIX_HOME="$XDG_DATA_HOME"/mix
export ghcappdata="$XDG_CONFIG_HOME/ghc"

export RBENV_ROOT="$XDG_CONFIG_HOME/rbenv"
export BUNDLE_PATH="$XDG_DATA_HOME"/bundle
export LUAROCKS_SYSCONFDIR="$XDG_CONFIG_HOME"/luarocks

# TeX Live
export TEXMFHOME=$XDG_DATA_HOME/texmf
export TEXMFVAR=$XDG_CACHE_HOME/texlive/texmf-var
export TEXMFCONFIG=$XDG_CONFIG_HOME/texlive/texmf-config
#export BASH_COMPLETION_USER_FILE="$XDG_CONFIG_HOME"/bash-completion/bash_completion

# Applications - Config
export CUDA_CACHE_PATH="$XDG_CACHE_HOME"/nv
export GTK_RC_FILES="$XDG_CONFIG_HOME"/gtk-1.0/gtkrc
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc 
export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker
export IPYTHONDIR="$XDG_CONFIG_HOME"/jupyter
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME"/jupyter 
export XMONAD_CONFIG_HOME="$XDG_CONFIG_HOME"/xmonad
export SPACEMACSDIR="$XDG_CONFIG_HOME"/spacemacs
export PARALLEL_HOME="$XDG_CONFIG_HOME"/parallel 
export KAGGLE_CONFIG_DIR="$XDG_CONFIG_HOME"/kaggle
export ANDROID_PREFS_ROOT="$XDG_CONFIG_HOME"/android
export MOZC_CONFIGURATION_DIRECTORY="$XDG_CONFIG_HOME"/mozc
export ncmpcpp_directory="$XDG_CONFIG_HOME"/ncmpcpp
export WEECHAT_HOME=$XDG_CONFIG_HOME/weechat/
export KDEHOME="$XDG_CONFIG_HOME"/kde
export KDEWM="/usr/bin/i3"
export CONAN_USER_HOME="$XDG_CONFIG_HOME"
export REDISCLI_RCFILE="$XDG_CONFIG_HOME"/redis/redisclirc
export EM_CACHE="$XDG_CACHE_HOME"/emscripten

# Applications - Data
export MACHINE_STORAGE_PATH="$XDG_DATA_HOME"/docker-machine 
export WINEPREFIX="$XDG_DATA_HOME"/wineprefixes/default 
export GRADLE_USER_HOME="$XDG_DATA_HOME"/gradle
export VSCODE_PORTABLE="$XDG_DATA_HOME"/vscode
export SSB_HOME="$XDG_DATA_HOME"/zoom
export GNUPGHOME="$XDG_DATA_HOME"/gnupg
export CARGO_HOME="$XDG_DATA_HOME"/cargo
export KONAN_DATA_DIR="$XDG_CACHE_HOME"/konan

# QT Theming
export QT_QPA_PLATFORMTHEME=qt6ct
export QT_AUTO_SCREEN_SCALE_FACTOR=1
export FONTCONFIG_PATH=/etc/fonts

# Bin paths
SBIN=/usr/sbin
LOCAL=$HOME/.local/bin
USRLOCAL=/usr/local/bin

# Ruby
RBENV=$HOME/.config/rbenv
RUBY=$RBENV/shims
GEM_BIN=$GEM_HOME/bin

# JS
YARN=$YARN_DIR/bin
NPM=$NPM_DIR/bin

# Rust
RUST=$CARGO_HOME/bin

# Go
GO=/usr/local/go/bin
GOLOCAL=$GOPATH/bin

# Haskell
CABAL=$CABAL_DIR/bin
GHCUP=$GHCUP_USE_XDG_DIRS/bin

# Lua
# Load the luarocks paths
eval $(luarocks path | head -n 2)
LUA=$HOME/.luarocks/bin

#export PATH=$LUA:$RUBY:$GEM_BIN:$PATH:$SBIN:$USRLOCAL:$YARN_DIR:$NPM:$RUST:$GOLOCAL:$GO:$CABAL:$GHCUP:$LOCAL
export PATH=$LUA:$RUBY:$GEM_BIN:$PATH:$SBIN:$USRLOCAL:$NPM:$RUST:$GOLOCAL:$GO:$CABAL:$GHCUP:$LOCAL

# Common Lisp
export QL=/usr/lib/quicklisp/setup.lisp

# Java
OPENJDK_8=/usr/lib/jvm/java-1.8.0-openjdk-amd64
{{- if (eq .system "arch-laptop" "arch-asus" ) }}
export JAVA_HOME=/usr/lib/jvm/default-runtime/
{{- else if (eq .system "ubuntu-workstation") }}
export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
{{- end }}

# https://tex.stackexchange.com/questions/260/how-to-set-preferred-pdf-viewer-for-texdoc-in-texlive-2010-pretest
export EDITOR=nvim
export PDFVIEWER=okular
export scripts="$XDG_CONFIG_HOME"/dotfiles/scripts
export aliasd="$scripts"/startup

# Export maintainer name and email for use in packaging
export MAINTAINER_NAME=$(git config --get user.name)
export MAINTAINER_EMAIL=$(git config --get user.email)

export ANDROID_SDK_ROOT="/opt/android-sdk"
export ANDROID_AVD_HOME="~/.config/android/avd"
export ANDROID_NDK_HOME=/opt/android-ndk

# Load aliases
source $aliasd/aliases.sh 
load_alias() {
    alias_name="$1.sh"
    [[ -f "$aliasd/$alias_name" ]] && source "$aliasd/$alias_name" || :
}

# Make GPG Key available to current shell
export GPG_TTY=$(tty)

load_alias "cw"
load_alias "uni"
load_alias "fai"
load_alias "draw"
load_alias "book"

{{- if (eq .system "arch-laptop") }}
# HiDPI - These environment variables scale applications x2, but can also make some icons blurry
# https://wiki.archlinux.org/index.php/HiDPI#GDK_3_(GTK_3)
#export GDK_SCALE=2
#export GDK_DPI_SCALE=0.5
{{- end }}

{{- if (eq .system "arch-laptop" "arch-asus") }} 
source $XDG_CONFIG_HOME/dotfiles/scripts/startup/nvm.sh
{{- else if (eq .system "ubuntu-workstation") }}
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # Load nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # Load shell completions for nvm
{{- end }}

eval "$(rbenv init -)" # Load rbenv
source $CARGO_HOME/env # Load cargo
#source $scripts/terminal/fortunecow.sh

{{- if (eq .dsp "wayland") }} 
# Enable Wayland
# export MOZ_ENABLE_WAYLAND=1
#source $scripts/terminal/fortunecow.sh
{{- end }}

# Persistent Tmux Sessions
#/usr/bin/tmux attach -t 0
# vim:ft=sh
